name: composed-mqtt-project

## ALL PORTS are decided by flowchart/port_flowchart.mmd
# The ip address is the service name, e.g., `broker` for the MQTT broker, `web-ui` for the web UI

services:

  ### MQTT Broker Service
  broker:
    image: eclipse-mosquitto:2.0.21
    container_name: my-mosquitto-broker-container
    restart: always
    ports:
      - "1883:1883"
    volumes:
      - ./mqtt-broker/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mqtt-broker/data:/mosquitto/data
      - ./mqtt-broker/log:/mosquitto/log
    networks:
      - iot_network

  ### ST Printer Services
  st-printer-1:
    build:
      context: ./st_printer
    container_name: st-printer-1-container
    restart: always
    ports:
      - "8130:8130"
    volumes:
      - ./st_printer/target_printer_mqtt_config.yaml:/app/printer_mqtt_config.yaml
    environment:
      - PRINTER_ID=printer_001
    networks:
      - iot_network

  st-printer-2:
    build:
      context: ./st_printer
    container_name: st-printer-2-container
    restart: always
    ports:
      - "8131:8130"
    volumes:
      - ./st_printer/target_printer_mqtt_config.yaml:/app/printer_mqtt_config.yaml
    environment:
      - PRINTER_ID=printer_002
    networks:
      - iot_network

  st-printer-3:
    build:
      context: ./st_printer
    container_name: st-printer-3-container
    restart: always
    ports:
      - "8132:8130"
    volumes:
      - ./st_printer/target_printer_mqtt_config.yaml:/app/printer_mqtt_config.yaml
    environment:
      - PRINTER_ID=printer_003
    networks:
      - iot_network

  ### Web UI Service
  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    container_name: web-ui-container
    ports:
      - "8000:8000"
    volumes:
      - ./web-ui/target_web_conf.yaml:/app/web_conf.yaml
    networks:
      - iot_network
    restart: always
    depends_on:
     - api-gateway

  ### API Gateway Service
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway-container
    ports:
      - "8080:8080"
    volumes:
      - ./api-gateway/config:/app/config
      - ./api-gateway/logs:/app/logs
    networks:
      - iot_network
    restart: unless-stopped


networks:
  iot_network:
    driver: bridge